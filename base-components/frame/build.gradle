plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    namespace 'com.whatever.frame'
    compileSdk Integer.parseInt(libs.versions.compilesdk.get())

    defaultConfig {
        minSdk Integer.parseInt(libs.versions.minSdk.get())
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += ["-XXLanguage:+InlineClasses", "-XXLanguage:-NewInference"]
    }
}

dependencies {
    implementation(libs.androidx.core.ktx)
    implementation(libs.material)
    implementation(libs.androidx.appcompat)

    testImplementation(libs.junit)
    androidTestImplementation(libs.androidx.test.ext.junit)
    androidTestImplementation(libs.espresso.core)

    implementation(libs.glideLoader)
    implementation(libs.okhttp3.integration)
    kapt(libs.glide.compiler)

    implementation(libs.okhttp3.lib)
    implementation(libs.logger)

    implementation(libs.activity.compose)
    implementation platform(libs.compose.bom)
    implementation(libs.compose.ui.lib)
    implementation(libs.compose.ui.graphics)
    implementation(libs.compose.ui.tooling.preview)
    implementation(libs.material3)
    implementation(libs.startup)
}

//configurations.all{
//    resolutionStrategy.force("org.jetbrains.kotlin:kotlin-stdlib:1.8.10")
//}

/**
 * 获取配置文件信息
 * def prop = getProp()
 * implementation prop.getProperty('core-ktx')
 * @return 配置文件对象
 */
def getProp() {
    def customPropsFile = file('../../configs.properties')
    if (customPropsFile.exists()) {
        Properties customProps = new Properties()
        customProps.load(new FileInputStream(customPropsFile))
        return customProps
    }
    return null
}